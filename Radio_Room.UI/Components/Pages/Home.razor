@page "/"
@using Radio_Room.UI.dbContext;
@using Radio_Room.UI;
@inject IDialogueService DialogueService
@using Newtonsoft.Json;
@rendermode InteractiveServer
@using System.Linq;

<MudStack class="pa-3" Justify="Justify.FlexEnd" Row="true">
    <MudButton Class="button" Color="Color.Success" Variant="Variant.Filled" @onclick='(async () => await ProgressSaver.CopyFileAsync(savedResponseOptions))'>
            <MudText Color="Color.Info" Typo="Typo.h6">Save</MudText>
    </MudButton>
    <MudButton Class="button" Color="Color.Success" Variant="Variant.Filled" @onclick='(async () => (await ProgressSaver.ReadFileAsync()).ToList().ForEach(y => LoadSpecificDialogue(y)))'>
        <MudText Color="Color.Info" Typo="Typo.h6">Load</MudText>
    </MudButton>
</MudStack>

<MudStack Class="pa-5">
    <MudText Color="Color.Warning" Typo="Typo.subtitle1">Coordinates: lat = 51.0344 & long = 2.3768</MudText>
    <MudText Color="Color.Warning" Typo="Typo.subtitle1">Country: FR</MudText>
    <MudText Color="Color.Warning" Typo="Typo.subtitle1">Current Weather in Dunkirk: @weatherCheck </MudText>
</MudStack>

<!--Starting dialogue:-->
<MudStack Class="pa-3">
        <MudText>
            Hello?
        </MudText>
        <MudText>
            Hello? Can anyone read me?
        </MudText>
</MudStack>

<!--First response:-->
<MudStack class="pa-3" Justify="Justify.Center" Row="true">
<MudButtonGroup Color="Color.Secondary" Variant="Variant.Outlined" OverrideStyles="@override1stResponsesStyles">
    <MudButton Class="button" Color="Color.Tertiary" Variant="Variant.Filled" Disabled=@disable1stOption @onclick='(() => LoadSpecificDialogue(responseOption1))'>
        <MudText Color="Color.Primary">
        This is US (RTO) operator Clay Doberman from the USS Massachusetts battleship.
        Who is this? 
        </MudText>
    </MudButton>
    <MudButton Class="button" Color="Color.Tertiary" Variant="Variant.Filled" Disabled=@disable2ndOption @onclick='(() => LoadSpecificDialogue(responseOption2))'>
        <MudText Color="Color.Primary">
        This is (RTO) operator Clay Doberman from the USS Massachusetts battleship. I read you. 
        </MudText>
    </MudButton>
</MudButtonGroup>
</MudStack>

<!--Dialogue after 1st / 2nd response:-->
<MudStack Class="pa-3">
    <MudText>
        @dialogue1.DialogueLine
    </MudText>
    <MudText>
        @dialogue2.DialogueLine 
    </MudText>
    <MudText>
        @dialogue3.DialogueLine 
    </MudText>
    <MudText> 
        @dialogue4.DialogueLine
    </MudText>
</MudStack>




<!--(after 1st response option) 2nd response:-->
<MudStack class="pa-3" Justify="Justify.Center" Row="true">
<MudButtonGroup Justify="Justify.Center" Color="Color.Secondary" Variant="Variant.Outlined" OverrideStyles="@override2ndResponsesStyles" hidden="@Hide1stOptionButtonGroup">
    <MudButton Class="button" Color="Color.Tertiary" Variant="Variant.Filled" Disabled=@disable101Option @onclick='(() => LoadSpecificDialogue(responseOption101))'>
        <MudText Color="Color.Primary">
        Yes! Could you describe your surrounding? What's your situation?</MudText>
    </MudButton>
    <MudButton Class="button" Color="Color.Tertiary" Variant="Variant.Filled" Disabled=@disable102Option @onclick='(() => LoadSpecificDialogue(responseOption102))'>
        <MudText Color="Color.Primary">
        That must have been terrible! Did you lose your squad?</MudText>
    </MudButton>
</MudButtonGroup>
</MudStack>

<!--Dialogue 1A/B:-->
<MudStack class="pa-3" hidden="@Hide1stOptionButtonGroup">
    <MudText> @dialogue5.DialogueLine</MudText>
    <MudText> @dialogue6.DialogueLine</MudText>
    <MudText> @dialogue7.DialogueLine</MudText>
    <MudText> @dialogue8.DialogueLine</MudText>
</MudStack>

<!--use a list to store all the potential dialogues and use an if statement in the
button group "if dialogues = this count render the button group"-->

<!--(after 2nd response option) 2nd response:-->
<MudStack class="pa-3" Justify="Justify.Center" Row="true">
<MudButtonGroup Color="Color.Secondary" Variant="Variant.Outlined" OverrideStyles="@override2ndResponsesStyles" hidden="@Hide2ndOptionButtonGroup">
    <!--@(if (responseOption2 == 2) {return false;}) - what is wrong with this code? -->
    <MudButton Class="button" Color="Color.Tertiary" Variant="Variant.Filled" Disabled=@disable201Option @onclick='(() => LoadSpecificDialogue(responseOption201))'>
        <MudText Color="Color.Primary">
        I'm going to need more proof of identity.
        Could you give some more information on your squad commander, 
        your squad number, and anything else related to identifying you, 
        so I can check? </MudText></MudButton>
    <MudButton Class="button" Color="Color.Tertiary" Variant="Variant.Filled" Disabled=@disable202Option @onclick='(() => LoadSpecificDialogue(responseOption202))'>
        <MudText Color="Color.Primary">
        Why weren't you able to escape with the others?
        Where's your squad? </MudText></MudButton>
</MudButtonGroup>
</MudStack>

<!--Dialogue 2A/B:-->
<MudStack class="pa-3" hidden="@Hide2ndOptionButtonGroup">
    <MudText> @dialogue9.DialogueLine</MudText>
    <MudText> @dialogue10.DialogueLine</MudText>
    <MudText> @dialogue11.DialogueLine</MudText>
    <MudText>@dialogue12.DialogueLine </MudText>
    <MudText>@dialogue13.DialogueLine </MudText>
    <MudText> @dialogue14.DialogueLine</MudText>
    <MudText> @dialogue15.DialogueLine</MudText>
    <MudText> @dialogue16.DialogueLine</MudText>
</MudStack>

@code {

    //OpenWeather API call and data retrieval:
    public string weatherCheck = "";

    public class DataObject
    {
        public Weather[] weather = new Weather[1];
    }

    public class Weather
    {
        public int id { get; set; }
        public string main { get; set; }
        public string description { get; set; }
        public string icon { get; set; }
    }


    // Initializing dialogue database
    public async Task SeedDataAsync()
    {
        var context = new Radio_RoomDbContext();

        try
        {
            if (!context.Dialogues.Any())
            {
                IEnumerable<Dialogue> dialogues = GetDialoguesFromExternalDatabase();
                await context.Dialogues.AddRangeAsync(dialogues);
                var result = await context.SaveChangesAsync();
                Console.WriteLine($"Result: {result}");
            }
        }
        catch (ArgumentException ex)
        {

        }
    }

    public class DialogsList { public List<Dialogue> Dialogues = []; };

    private IEnumerable<Dialogue> GetDialoguesFromExternalDatabase()
    {
        string pathToDialogueJson = "Dialogues.json";
        string jsonString = File.ReadAllText(pathToDialogueJson);
        var dialogues = JsonConvert.DeserializeObject<DialogsList>(jsonString);

        return dialogues.Dialogues;

    }

    HashSet<int> savedResponseOptions = new HashSet<int>();

    private const string url = "https://api.openweathermap.org/data/2.5/weather?lat=51.0344&lon=2.3768&appid=";
    protected override async Task OnInitializedAsync()
    {
        var context = new Radio_RoomDbContext();
        context.Dialogues.ExecuteDelete();
        await context.SaveChangesAsync();

        await SeedDataAsync();

        // get all dialogues:
        await LoadDataAsync();

        // web api call
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri(url);

        // List data response.
        HttpResponseMessage response = client.GetAsync(url).Result;
        if (response.IsSuccessStatusCode)
        {
            // Parse the response body.
            var dataObjects = response.Content.ReadAsAsync<DataObject>().Result;

            weatherCheck = dataObjects.weather[0].description;
        }
        else
        {
            Console.WriteLine("{0} ({1})", (int)response.StatusCode, response.ReasonPhrase);
        }
        client.Dispose();
    }

    /*Dialogue code: */

    // specific player responses:
    public int responseOption1 = 1;

    public int responseOption2 = 2;

    public int responseOption101 = 101;

    public int responseOption102 = 102;

    public int responseOption201 = 201;

    public int responseOption202 = 202;

    //-------------------------------------------------------------------------------------------------------------------

    //specific dialoguelines:
    Dialogue dialogue1 = new Dialogue();

    Dialogue dialogue2 = new Dialogue();

    Dialogue dialogue3 = new Dialogue();

    Dialogue dialogue4 = new Dialogue();

    Dialogue dialogue5 = new Dialogue();

    Dialogue dialogue6 = new Dialogue();

    Dialogue dialogue7 = new Dialogue();

    Dialogue dialogue8 = new Dialogue();

    Dialogue dialogue9 = new Dialogue();

    Dialogue dialogue10 = new Dialogue();

    Dialogue dialogue11 = new Dialogue();

    Dialogue dialogue12 = new Dialogue();

    Dialogue dialogue13 = new Dialogue();

    Dialogue dialogue14 = new Dialogue();

    Dialogue dialogue15 = new Dialogue();

    Dialogue dialogue16 = new Dialogue();

    List<Dialogue> dialogues = new List<Dialogue>();

    private async Task LoadDataAsync()
    {
        dialogues = await DialogueService.GetAllDialogues();
    }

    public bool disable1stOption { get; set; } = false;
    public bool disable2ndOption { get; set; } = false;
    public bool disable101Option { get; set; } = false;
    public bool disable102Option { get; set; } = false;
    public bool disable201Option { get; set; } = false;
    public bool disable202Option { get; set; } = false;


    public bool Hide1stOptionButtonGroup { get; set; } = true;
    public bool Hide2ndOptionButtonGroup { get; set; } = true;

    public bool override1stResponsesStyles { get; set; } = true;
    public bool override2ndResponsesStyles { get; set; } = true;

    public void LoadSpecificDialogue(int responseOption)
    {

        savedResponseOptions.Add(responseOption);
        if (responseOption == 1)
        {
            //this needs to grab from the buttons
            var characterResponse1 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 1).FirstOrDefault();
            dialogue1 = characterResponse1;

            var characterResponse2 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 2).FirstOrDefault();
            dialogue2 = characterResponse2;

            var characterResponse3 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 3).FirstOrDefault();
            dialogue3 = characterResponse3;

            var characterResponse4 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 4).FirstOrDefault();
            dialogue4 = characterResponse4;

            override1stResponsesStyles = false;

            Hide1stOptionButtonGroup = false;

            disable2ndOption = true;
        }
        else if (responseOption == 2)
        {
            var characterResponse1 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 5).FirstOrDefault();
            dialogue1 = characterResponse1;

            var characterResponse2 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 6).FirstOrDefault();
            dialogue2 = characterResponse2;

            var characterResponse3 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 7).FirstOrDefault();
            dialogue3 = characterResponse3;

            var characterResponse4 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 8).FirstOrDefault();
            dialogue4 = characterResponse4;

            override1stResponsesStyles = false;

            Hide2ndOptionButtonGroup = false;

            disable1stOption = true;
        }
        else if (responseOption == 101)
        {
            var characterResponse1 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 9).FirstOrDefault();
            dialogue5 = characterResponse1;

            var characterResponse2 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 10).FirstOrDefault();
            dialogue6 = characterResponse2;

            var characterResponse3 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 11).FirstOrDefault();
            dialogue7 = characterResponse3;

            var characterResponse4 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 12).FirstOrDefault();
            dialogue8 = characterResponse4;

            override2ndResponsesStyles = false;

            disable102Option = true;
        }
        else if (responseOption == 102)
        {
            var characterResponse1 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 13).FirstOrDefault();
            dialogue5 = characterResponse1;

            var characterResponse2 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 14).FirstOrDefault();
            dialogue6 = characterResponse2;

            var characterResponse3 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 15).FirstOrDefault();
            dialogue7 = characterResponse3;

            override2ndResponsesStyles = false;

            disable101Option = true;
        }
        else if (responseOption == 201)
        {
            var characterResponse1 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 16).FirstOrDefault();
            dialogue9 = characterResponse1;

            var characterResponse2 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 17).FirstOrDefault();
            dialogue10 = characterResponse2;

            var characterResponse3 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 18).FirstOrDefault();
            dialogue11 = characterResponse3;

            override2ndResponsesStyles = false;

            disable202Option = true;
        }
        else if (responseOption == 202)
        {
            var characterResponse1 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 19).FirstOrDefault();
            dialogue9 = characterResponse1;

            var characterResponse2 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 20).FirstOrDefault();
            dialogue10 = characterResponse2;

            var characterResponse3 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 21).FirstOrDefault();
            dialogue11 = characterResponse3;

            var characterResponse4 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 22).FirstOrDefault();
            dialogue12 = characterResponse4;

            var characterResponse5 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 23).FirstOrDefault();
            dialogue13 = characterResponse5;

            var characterResponse6 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 24).FirstOrDefault();
            dialogue14 = characterResponse6;

            var characterResponse7 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 25).FirstOrDefault();
            dialogue15 = characterResponse7;

            var characterResponse8 = dialogues.Where(s => s.PlayerResponseOption == responseOption && s.DialogueId == 26).FirstOrDefault();
            dialogue16 = characterResponse8;

            override2ndResponsesStyles = false;

            disable201Option = true;
        }
    }

}
